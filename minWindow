class Solution {
    public String minWindow(String s, String t) {
    HashMap<Character,Integer> need= new HashMap<>();
    for(char ch:t.toCharArray()){
        need.put(ch, need.getOrDefault(ch,0)+1);
    }
    HashMap<Character,Integer> window= new HashMap<>();
    int left=0;
    int minlen=Integer.MAX_VALUE, have=0,needcount=need.size(),resleft=0;
    for(int right=0; right<s.length();right++){
        char c = s.charAt(right);
        window.put(c, window.getOrDefault(c,0)+1);
        if(need.containsKey(c) && need.get(c).intValue() == window.get(c).intValue()){
            have++;
        }
        while(have==needcount){
            if((right-left+1)<minlen){
                minlen=right-left+1;
                resleft=left;
            }
            char leftchar = s.charAt(left);
            window.put(leftchar, window.get(leftchar)-1);
            if(need.containsKey(leftchar) && window.get(leftchar).intValue() < need.get(leftchar).intValue()){
                have--;

            }
            left++;

        }

    }
    return (minlen==Integer.MAX_VALUE)? "":s.substring(resleft,resleft+minlen);
